extends ../../partials/iframe

block content

    include ../../partials/datatables-upload

    script.
        let imageEditorInstance = null;
        let adminUpload = null;
        let dir = "[(${dir})]";
        let name = "[(${name})]";
        let cropperVm = null;
        let labels = {
            "selectedX": "[[\#{components.gallery.areaOfInterest.selectedX}]]",
            "selectedY": "[[\#{components.gallery.areaOfInterest.selectedY}]]",
            "selectedWidth": "[[\#{components.gallery.areaOfInterest.selectedWidth}]]",
            "selectedHeight": "[[\#{components.gallery.areaOfInterest.selectedHeight}]]",
        }

        function getCropValues() {
            let imageEditorRatio = "[(${layout.getConstant('imageEditorRatio')})]";
            // safe check
            if(imageEditorRatio == null || imageEditorRatio.length < 1) return [""];
            // trim
            imageEditorRatio = imageEditorRatio.replace(/\s+|\s+/gm,'');
            // replace : with -
            imageEditorRatio = imageEditorRatio.replace(/:/g, '-');
            // split
            return imageEditorRatio.split(",");
        }

        function getResizeValues() {
            let imageEditorSizeTemplates = "[(${layout.getConstant('imageEditorSizeTemplates')})]";
            // safe check
            if(imageEditorSizeTemplates == null || imageEditorSizeTemplates.length < 1) return [""];
            // trim
            imageEditorSizeTemplates = imageEditorSizeTemplates.replace(/\s+|\s+/gm,'');
            // split
            return imageEditorSizeTemplates.split(";");
        }

        //fake galleryTable object for areaOfInterests
        let galleryTable = {
            EDITOR: {
                currentJson: {
                    selectedX: [(${entity.selectedX})],
                    selectedY: [(${entity.selectedY})],
                    selectedWidth: [(${entity.selectedWidth})],
                    selectedHeight: [(${entity.selectedHeight})],
                    imagePath: dir,
                    imageName: name
                }
            }
        }
        galleryTable.EDITOR.field = function(name) {
            var ret = {};
            ret.label = function() {
                return labels[name];
            }
            ret.val = function() {
                let val = ""+galleryTable.EDITOR.currentJson[name];
                return val;
            }
            return ret;
        }
        galleryTable.EDITOR.set = function(field, value) {
            galleryTable.EDITOR.currentJson[field] = value;
            return galleryTable.EDITOR;
        }

        function resizeImageEditor() {
            //console.log("resizeImageEditor");
            var height = $(window).height()-$("#galleryTable_modal div.modal-header").outerHeight()-$("#galleryTable_modal div.modal-footer").outerHeight()+"px";
            if (imageEditorInstance != null) {
                //this is problematic with resize function, image will not be smaller than original
                /*imageEditorInstance.resizeCanvasDimension({
                    width: "100%",
                    height: height
                });*/
                $("#photoEditorContainer").css("height", height);
                /*not working imageEditorInstance.ui.resizeEditor({
                    uiSize: {
                        width: $(window).width()-16,
                        height: height
                    }
                });
                */
            }
        }

        window.domReady.add(function () {
            if (dir != '' && name!='') {
                $("#modalIframeLoader").hide();
                $("#DTE_Field_imageName").val(name);
                $("#DTE_Field_imagePath").val(dir);
                $("h5.modal-title").text(name);
                adminUpload = window.AdminUpload({
                    element: "#dt-upload",
                    uploadType: "image",
                    acceptedFiles: ".jpg,.jpeg,.mp4,.gif,.png",
                    destinationFolder: dir,
                    writeDirectlyToDestination: true
                });
                var imageEditorModal = new bootstrap.Modal(document.getElementById('galleryTable_modal'), {
                    backdrop: 'static',
                    keyboard: false,
                    focus: false //otherwise Text tool will not work
                });
                imageEditorModal.show();
                initializeImageEditor(null);
                $("#imageEditorButtons button.btn-primary").on("click", function() {
                    if ($("#pills-dt-galleryTable-areaOfInterest-tab").hasClass("active") && cropperVm != null) {
                        $.post({
                            url: "/admin/rest/image-editor/save-area-of-interest",
                            data: galleryTable.EDITOR.currentJson,
                            success: function(data) {
                                window.close();
                            },
                            error: function(err) {
                                WJ.notifyError("[[\#{components.tips.saving_error}]]", err.responseText);
                            }
                        })
                        return;
                    }
                    if (imageEditorInstance != null) {
                        imageEditorInstance.onPostEditedImage('/admin/upload/chunk');
                        $("#imageEditorButtons button.btn-primary i").attr("class", "ti ti-loader-2 ti-spin"); //TODO: Overit ze sa animacia zobrazuje spravne
                    }
                });
                $("#imageEditorButtons button.btn-close-editor").on("click", function() {
                    window.close();
                });

                window.addEventListener("WJ.imageEditor.upload.success", function(e) {
                    try {
                        var els = window.opener.ckEditorInstance.document.$.getElementsByClassName("cke_floatingtools_selected");
                        Array.from(els).forEach((el) => {
                            if (el.tagName.toLowerCase()=="img") {
                                var src = el.getAttribute("src");
                                if (src.indexOf("?v=")!=-1 || src.indexOf("&v=")!=-1) src = WJ.urlUpdateParam(src, "v", (new Date()).getTime());
                                else src = WJ.urlAddParam(src, "v", (new Date()).getTime());

                                el.setAttribute("src", src);
                                el.setAttribute("data-cke-saved-src", src);
                            }
                        });
                    } catch (e) {
                        console.log(e);
                    }
                    window.close();
                });

                window.addEventListener('resize', function (e) {
                    resizeImageEditor();
                }, true);

                $('#pills-dt-editor-galleryTable a').on('click', function (e) {
                    if (e.currentTarget.id === 'pills-dt-galleryTable-areaOfInterest-tab') initializeAreaOfInterest(e);
                });
            }
        });

        const initializeImageEditor = event => {
            //dynamicky vytvaram image editor
            //TODO: upravit aby sa neinicializoval zakazdym, ale len prepouzil
            imageEditor().then(module => {
                let now = (new Date()).getTime();
                const options = {
                    includeUI: {
                        cropBonusValues: getCropValues(),
                        resizePresetDimensions: getResizeValues(),
                        menuBarPosition: 'left',
                        loadImage: {
                            path: `${dir}/${name}?v=${now}`,
                            name: name,
                        },
                        menu: ['resize', 'crop', 'flip', 'rotate', 'draw', 'shape', 'icon', 'text', 'mask', 'filter'],
                        locale: {
                            'Resize': '[[\#{image_editor.resize}]]',
                            'Width': '[[\#{image_editor.width}]]',
                            'Height': '[[\#{image_editor.height}]]',
                            'Lock Aspect Ratio': '[[\#{image_editor.constrain_proportions}]]',
                            'presetDimensionNoneOption': '[[\#{components.gallery.tui-image-editor.presetDimensionNoneOption}]]',
                            'Preset Dimensions': '[[\#{components.gallery.tui-image-editor.presetDimensions}]]',
                            'Crop': '[[\#{components.gallery.tui-image-editor.Crop}]]',
                            'Invert': '[[\#{components.gallery.tui-image-editor.Invert}]]',
                            'Remove White': '[[\#{components.gallery.tui-image-editor.Remove_White}]]',
                            'Color Filter': '[[\#{components.gallery.tui-image-editor.Color_Filter}]]',
                            'DeleteAll': '[[\#{components.gallery.tui-image-editor.DeleteAll}]]',
                            'Rotate': '[[\#{components.gallery.tui-image-editor.Rotate}]]',
                            'Undo': '[[\#{components.gallery.tui-image-editor.Undo}]]',
                            'Redo': '[[\#{components.gallery.tui-image-editor.Redo}]]',
                            'Reset': '[[\#{components.gallery.tui-image-editor.Reset}]]',
                            'Delete': '[[\#{components.gallery.tui-image-editor.Delete}]]',
                            'Flip': '[[\#{components.gallery.tui-image-editor.Flip}]]',
                            'Flip X': '[[\#{components.gallery.tui-image-editor.Flip_X}]]',
                            'Flip Y': '[[\#{components.gallery.tui-image-editor.Flip_Y}]]',
                            'Range': '[[\#{components.gallery.tui-image-editor.Range}]]',
                            'Free': '[[\#{components.gallery.tui-image-editor.Free}]]',
                            'Load Mask Image': '[[\#{components.gallery.tui-image-editor.Load_Mask_Image}]]',
                            'Left': '[[\#{components.gallery.tui-image-editor.Left}]]',
                            'Text size': '[[\#{components.gallery.tui-image-editor.Text_size}]]',
                            'Custom icon': '[[\#{components.gallery.tui-image-editor.Custom_icon}]]',
                            'Rectangle': '[[\#{components.gallery.tui-image-editor.Rectangle}]]',
                            'Circle': '[[\#{components.gallery.tui-image-editor.Circle}]]',
                            'Triangle': '[[\#{components.gallery.tui-image-editor.Triangle}]]',
                            'Fill': '[[\#{components.gallery.tui-image-editor.Fill}]]',
                            'Stroke': '[[\#{components.gallery.tui-image-editor.Stroke}]]',
                            'Center': '[[\#{components.gallery.tui-image-editor.Center}]]',
                            'Right': '[[\#{components.gallery.tui-image-editor.Right}]]',
                            'Underline': '[[\#{components.gallery.tui-image-editor.Underline}]]',
                            'Bold': '[[\#{components.gallery.tui-image-editor.Bold}]]',
                            'Italic': '[[\#{components.gallery.tui-image-editor.Italic}]]',
                            'Straight': '[[\#{components.gallery.tui-image-editor.Straight}]]',
                            'Color': '[[\#{components.gallery.tui-image-editor.Color}]]',
                            'Draw': '[[\#{components.gallery.tui-image-editor.Draw}]]',
                            'Shape': '[[\#{components.gallery.tui-image-editor.Shape}]]',
                            'Icon': '[[\#{components.gallery.tui-image-editor.Icon}]]',
                            'Mask': '[[\#{components.gallery.tui-image-editor.Mask}]]',
                            'Apply': '[[\#{components.gallery.tui-image-editor.Apply}]]',
                            'Cancel': '[[\#{components.gallery.tui-image-editor.Cancel}]]',
                            'Custom': '[[\#{components.gallery.tui-image-editor.Custom}]]',
                            'Square': '[[\#{components.gallery.tui-image-editor.Square}]]',
                            'Grayscale': '[[\#{components.gallery.tui-image-editor.Grayscale}]]',
                            'Brightness': '[[\#{components.gallery.tui-image-editor.Brightness}]]',
                            'Pixelate': '[[\#{components.gallery.tui-image-editor.Pixelate}]]',
                            'Tint': '[[\#{components.gallery.tui-image-editor.Tint}]]',
                            'Multiply': '[[\#{components.gallery.tui-image-editor.Multiply}]]',
                            'Blend': '[[\#{components.gallery.tui-image-editor.Blend}]]',
                            'Emboss': '[[\#{components.gallery.tui-image-editor.Emboss}]]',
                            'Sepia': '[[\#{components.gallery.tui-image-editor.Sepia}]]',
                            'Sepia2': '[[\#{components.gallery.tui-image-editor.Sepia2}]]',
                            'Blur': '[[\#{components.gallery.tui-image-editor.Blur}]]',
                            'Sharpen': '[[\#{components.gallery.tui-image-editor.Sharpen}]]',
                            'Noise': '[[\#{components.gallery.tui-image-editor.Noise}]]',
                            'Distance': '[[\#{components.gallery.tui-image-editor.Distance}]]',
                            'Threshold': '[[\#{components.gallery.tui-image-editor.Threshold}]]',
                            'Arrow': '[[\#{components.gallery.tui-image-editor.Arrow}]]',
                            'Arrow-2': '[[\#{components.gallery.tui-image-editor.Arrow}]]',
                            'Arrow-3': '[[\#{components.gallery.tui-image-editor.Arrow}]]',
                            'Star-1': '[[\#{components.gallery.tui-image-editor.Star-1}]]',
                            'Star-2': '[[\#{components.gallery.tui-image-editor.Star-2}]]',
                            'Polygon': '[[\#{components.gallery.tui-image-editor.Polygon}]]',
                            'Location': '[[\#{components.gallery.tui-image-editor.Location}]]',
                            'Heart': '[[\#{components.gallery.tui-image-editor.Heart}]]',
                            'Bubble': '[[\#{components.gallery.tui-image-editor.Bubble}]]',
                            'Double Click': '[[\#{components.gallery.tui-image-editor.DoubleClick}]]',
                        },
                        theme: {
                            'common.bisize.width': '251px',
                            'common.bisize.height': '40px',
                            'common.backgroundColor': '#fff',
                        },
                        uiSize: {
                            width: $(window).width()+"px",
                            height: $(window).height()-$(".DTE_Footer.modal-footer").outerHeight()-$(".DTE_Header.modal-header").outerHeight()+"px"
                        }
                    },
                    cssMaxWidth: $(window).width() - 360,
                    //64 je vyska spodnej nastrojovej listy
                    cssMaxHeight: $(window).height()-$(".DTE_Footer.modal-footer").outerHeight()-$(".DTE_Header.modal-header").outerHeight()-64-16,
                    usageStatistics: false

                }
                //console.log("options", options);
                imageEditorInstance = new module.ImageEditor(document.querySelector("#photoEditorContainer"), options);
                //console.log("ImageEditor initialized");
                setTimeout(() => {
                    resizeImageEditor();
                }, 1000);
            });
        };

        /* counter - kontrolujem ci bola vytvorena vue instance */
        let counter = 0;
        const createVueInstance = () => {
            return window.VueTools.createApp({
                components: {
                    'webjet-cropper-component': window.VueTools.getComponent('webjet-cropper-component')
                },
                methods: {
                    refresh() {
                        this.$refs.vueCropper.refresh();
                    },
                    resize() {
                        this.$refs.vueCropper.resetVisibleArea();
                    }
                }
            }).mount('#cropper-app');
        }

        const initializeAreaOfInterest = () => {
            counter += 1;
            if (counter <= 1) {
                cropperVm = createVueInstance();
                //window.crop = cropperVm;
            } else {
                /* pokial je uz vytvorena len refreshujem, nevytvaram nove vue */
                cropperVm.refresh();
            }
            window.addEventListener('WJ.DTE.closeclick', () => {
                cropperVm.$refs.vueCropper.imageIsReady = false;
            }, false);
        }

    div.modal.DTED(id="galleryTable_modal" tabindex="-1")
        div.modal-dialog.modal-dialog-scrollable.modal-xl.modal-fullscreen
            div.DTE.DTE_Action_Edit.modal-content
                div.DTE_Header.modal-header
                    div.DTE_Header_Content
                        .row
                            .col-sm-4
                                h5.modal-title
                            .col-sm-8.md-breadcrumb
                                ul.nav(id="pills-dt-editor-galleryTable")
                                    li.nav-item
                                        a.nav-link.active(href="#pills-dt-galleryTable-photoeditor" id="pills-dt-galleryTable-photoeditor-tab" data-bs-toggle="tab") [[\#{admin.editor.title}]]
                                    li.nav-item
                                        a.nav-link(href="#pills-dt-galleryTable-areaOfInterest" id="pills-dt-galleryTable-areaOfInterest-tab" data-bs-toggle="tab") [[\#{components.gallery.areaOfInterest}]]
                div.DTE_Body.modal-body.has-content
                    .tab-content
                        div.dte-tab-pane.tab-pane.active.show(id="pills-dt-galleryTable-photoeditor")
                            div#imageEditorContainer
                                div#photoEditorContainer.dte-tab-autoheight
                        div.dte-tab-pane.tab-pane(id="pills-dt-galleryTable-areaOfInterest")
                            div.dte-tab-autoheight(style="overflow:scroll;")
                                div#cropper-app
                                    webjet-cropper-component(ref="vueCropper")
                            input(id="DTE_Field_imageName" style="display: none")
                            input(id="DTE_Field_imagePath" style="display: none")
                div.DTE_Footer.modal-footer
                    div.DTE_Footer_Content
                    div#imageEditorButtons.DTE_Form_Buttons
                        span.buttons-footer-left
                        button.btn.btn-outline-secondary.btn-close-editor(type="button")
                            i.ti.ti-x
                            span [[\#{button.cancel}]]
                        button.btn.btn-primary
                            i.ti.ti-check
                            span [[\#{button.save}]]

